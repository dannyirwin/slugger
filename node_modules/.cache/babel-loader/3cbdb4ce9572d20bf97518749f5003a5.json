{"ast":null,"code":"import _toConsumableArray from\"/Users/dirwin/Development/slugger/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import config from\"./config\";export default function runGame(canvas){var gameSize=arguments.length>1&&arguments[1]!==undefined?arguments[1]:config.gameSize;var upBtn=arguments.length>2?arguments[2]:undefined;var downBtn=arguments.length>3?arguments[3]:undefined;var leftBtn=arguments.length>4?arguments[4]:undefined;var rightBtn=arguments.length>5?arguments[5]:undefined;var ctx=canvas.getContext(\"2d\");var responsiveSize=config.responsiveSize;var numOfCells=config.numOfCells;var sideLength=responsiveSize?findScreenSize():config.gameSize;var scale=sideLength/numOfCells;var backgroundColor=config.backgroundColor;function findScreenSize(){var size=window.innerWidth<window.innerHeight?window.innerWidth:window.innerHeight;return size*0.9;}function resizeCanvas(){canvas.height=sideLength;canvas.width=sideLength;}function drawBackground(){ctx.fillStyle=backgroundColor;ctx.fillRect(0,0,sideLength,sideLength);ctx.fillStyle=\"rgba(255,255,255, 0.2)\";for(var i=0;i<numOfCells;i+=2){for(var j=0;j<numOfCells;j+=2){ctx.fillRect(i*scale,j*scale,scale,scale);ctx.fillRect((i+1)*scale,(j+1)*scale,scale,scale);}}}function cellPosToCanvasPos(positionArray){var x=Math.floor(positionArray[0]*scale+scale*0.5);var y=Math.floor(positionArray[1]*scale+scale*0.5);return[x,y];}function createSlug(){var color=arguments.length>0&&arguments[0]!==undefined?arguments[0]:\"salmon\";var x=arguments.length>1&&arguments[1]!==undefined?arguments[1]:Math.floor(numOfCells/2);var y=arguments.length>2&&arguments[2]!==undefined?arguments[2]:Math.floor(numOfCells/2);return{color:color,direction:\"north\",bellyPositions:[],isDigesting:false,segmentPositions:[[x,y],[x,y+1],[x,y+2]],update:function update(){this.checkCollision();this.moveSlug();this.handleDigestion();this.drawSlug();this.drawBelly();this.drawHead();},drawSlug:function drawSlug(){ctx.strokeStyle=this.color;ctx.lineWidth=scale*0.8;ctx.lineCap=\"round\";ctx.lineJoin=\"round\";ctx.beginPath();this.segmentPositions.forEach(function(segmentPosition,index){var position=cellPosToCanvasPos(segmentPosition);if(index===0){ctx.moveTo(position[0],position[1]);}else{ctx.lineTo(position[0],position[1]);}});ctx.stroke();},drawHead:function drawHead(){var position=cellPosToCanvasPos(this.segmentPositions[0]);var x=position[0];var y=position[1];var antennaLen=scale;var angle=this.direction===\"south\"?-2:2;ctx.beginPath();ctx.lineWidth=scale*0.1;var xTip=antennaLen*Math.cos(angle);var yTip=antennaLen*Math.sin(angle);ctx.moveTo(x+xTip,y-yTip);ctx.lineTo(x,y);ctx.lineTo(x-xTip,y-yTip);ctx.stroke();},drawBelly:function drawBelly(){if(this.isDigesting){ctx.fillStyle=this.color;this.bellyPositions.forEach(function(position){position=cellPosToCanvasPos(position);ctx.beginPath();ctx.arc(position[0],position[1],scale*0.5,0,2*Math.PI);ctx.fill();});}},moveSlug:function moveSlug(){this.segmentPositions.pop();this.segmentPositions.unshift(this.findNextPosition());},findNextPosition:function findNextPosition(){var direction=arguments.length>0&&arguments[0]!==undefined?arguments[0]:this.direction;var firstSegment=this.segmentPositions[0];var newSegment=[];switch(direction){case\"north\":newSegment[0]=firstSegment[0];newSegment[1]=firstSegment[1]-1;break;case\"west\":newSegment[0]=firstSegment[0]-1;newSegment[1]=firstSegment[1];break;case\"south\":newSegment[0]=firstSegment[0];newSegment[1]=firstSegment[1]+1;break;case\"east\":newSegment[0]=firstSegment[0]+1;newSegment[1]=firstSegment[1];break;default:console.error(\"ERROR: expected 'north' 'south' 'east' or 'west' but got \"+direction);}return newSegment;},checkCollision:function checkCollision(){var nextPosition=this.findNextPosition();var nextSegmentPositions=_toConsumableArray(this.segmentPositions);nextSegmentPositions.pop();var collideWithSelf=nextSegmentPositions.some(function(position){return position[0]===nextPosition[0]&&position[1]===nextPosition[1];});var collideWithEdge=nextPosition[0]<0||nextPosition[0]>numOfCells-1||nextPosition[1]<0||nextPosition[1]>numOfCells-1;var collideWithSnack=nextPosition[0]===snack.position[0]&&nextPosition[1]===snack.position[1];if(collideWithSelf||collideWithEdge){isPaused=true;gameOver();}else if(collideWithSnack){this.handleEatSnack();}},handleEatSnack:function handleEatSnack(){this.bellyPositions.push(snack.position);this.isDigesting=true;snack.handleEaten();},handleMovementInput:function handleMovementInput(direction){var nextPosition=this.findNextPosition(direction);var canMoveThere=!this.segmentPositions.some(function(position){return position[0]===nextPosition[0]&&position[1]===nextPosition[1];});if(canMoveThere){this.direction=direction;}},handleDigestion:function handleDigestion(){var _this=this;if(this.isDigesting){var tempPositions=_toConsumableArray(this.bellyPositions);tempPositions.forEach(function(position){var finalSegment=_this.segmentPositions[_this.segmentPositions.length-1];if(position[0]===finalSegment[0]&&position[1]===finalSegment[1]){_this.segmentPositions.push(position);_this.bellyPositions.shift();if(_this.bellyPositions.length===0){_this.isDigesting=false;}}});}}};}function createSnack(){var color=arguments.length>0&&arguments[0]!==undefined?arguments[0]:\"#66b8ff\";var newSnack={color:color,position:[0,0],randomizePosition:function randomizePosition(){var slugPositions=[slug.findNextPosition()].concat(slug.segmentPositions);var randomX=Math.floor(Math.random()*numOfCells);var randomY=Math.floor(Math.random()*numOfCells);if(slugPositions.length-2===Math.pow(numOfCells,2)){gameOver(\"You WIN!\");}else if(slugPositions.some(function(position){return position[0]===randomX&&position[1]===randomY;})){this.randomizePosition();}else{this.position=[randomX,randomY];}},drawSnack:function drawSnack(){var position=cellPosToCanvasPos(this.position);ctx.fillStyle=this.color;ctx.beginPath();ctx.arc(position[0],position[1],scale*0.3,0,2*Math.PI);ctx.fill();},handleEaten:function handleEaten(){snack=createSnack();}};newSnack.randomizePosition();return newSnack;}function gameOver(){var message=arguments.length>0&&arguments[0]!==undefined?arguments[0]:\"Game Over\";isPaused=true;slug=createSlug();snack=createSnack();drawBackground();alert(message);}var isPaused=true;var fps=config.fps;var fpsInterval=1000/fps;var now,then,delta;function startGame(fps){then=window.performance.now();requestAnimationFrame(update);}function update(){now=window.performance.now();delta=now-then;if(delta>fpsInterval){then=now-delta%fpsInterval;drawBackground();slug.update();snack.drawSnack();}!isPaused&&requestAnimationFrame(update);}function init(){resizeCanvas();drawBackground();startGame();}var slug=createSlug();var snack=createSnack();window.addEventListener(\"load\",init);document.addEventListener(\"keydown\",function(event){var key=event.key.toLocaleLowerCase();switch(key){case\" \":isPaused&&update();break;case\"p\":isPaused=!isPaused;!isPaused&&requestAnimationFrame(update);break;case\"w\":case\"arrowup\":slug.handleMovementInput(\"north\");break;case\"s\":case\"arrowdown\":slug.handleMovementInput(\"south\");break;case\"a\":case\"arrowleft\":slug.handleMovementInput(\"west\");break;case\"d\":case\"arrowright\":slug.handleMovementInput(\"east\");break;default:break;}});if(upBtn&&downBtn&&leftBtn&&rightBtn){upBtn.addEventListener(\"click\",function(){slug.handleMovementInput(\"north\");});downBtn.addEventListener(\"click\",function(){slug.handleMovementInput(\"south\");});leftBtn.addEventListener(\"click\",function(){slug.handleMovementInput(\"west\");});rightBtn.addEventListener(\"click\",function(){slug.handleMovementInput(\"east\");});}}","map":{"version":3,"sources":["/Users/dirwin/Development/slugger/src/slugger.js"],"names":["config","runGame","canvas","gameSize","upBtn","downBtn","leftBtn","rightBtn","ctx","getContext","responsiveSize","numOfCells","sideLength","findScreenSize","scale","backgroundColor","size","window","innerWidth","innerHeight","resizeCanvas","height","width","drawBackground","fillStyle","fillRect","i","j","cellPosToCanvasPos","positionArray","x","Math","floor","y","createSlug","color","direction","bellyPositions","isDigesting","segmentPositions","update","checkCollision","moveSlug","handleDigestion","drawSlug","drawBelly","drawHead","strokeStyle","lineWidth","lineCap","lineJoin","beginPath","forEach","segmentPosition","index","position","moveTo","lineTo","stroke","antennaLen","angle","xTip","cos","yTip","sin","arc","PI","fill","pop","unshift","findNextPosition","firstSegment","newSegment","console","error","nextPosition","nextSegmentPositions","collideWithSelf","some","collideWithEdge","collideWithSnack","snack","isPaused","gameOver","handleEatSnack","push","handleEaten","handleMovementInput","canMoveThere","tempPositions","finalSegment","length","shift","createSnack","newSnack","randomizePosition","slugPositions","slug","concat","randomX","random","randomY","drawSnack","message","alert","fps","fpsInterval","now","then","delta","startGame","performance","requestAnimationFrame","init","addEventListener","document","event","key","toLocaleLowerCase"],"mappings":"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","sourcesContent":["import config from \"./config\";\n\nexport default function runGame(\n  canvas,\n  gameSize = config.gameSize,\n  upBtn,\n  downBtn,\n  leftBtn,\n  rightBtn\n) {\n  const ctx = canvas.getContext(\"2d\");\n  const responsiveSize = config.responsiveSize;\n  const numOfCells = config.numOfCells;\n  const sideLength = responsiveSize ? findScreenSize() : config.gameSize;\n  const scale = sideLength / numOfCells;\n  const backgroundColor = config.backgroundColor;\n\n  function findScreenSize() {\n    const size =\n      window.innerWidth < window.innerHeight\n        ? window.innerWidth\n        : window.innerHeight;\n    return size * 0.9;\n  }\n\n  function resizeCanvas() {\n    canvas.height = sideLength;\n    canvas.width = sideLength;\n  }\n  function drawBackground() {\n    ctx.fillStyle = backgroundColor;\n    ctx.fillRect(0, 0, sideLength, sideLength);\n    ctx.fillStyle = \"rgba(255,255,255, 0.2)\";\n\n    for (let i = 0; i < numOfCells; i += 2) {\n      for (let j = 0; j < numOfCells; j += 2) {\n        ctx.fillRect(i * scale, j * scale, scale, scale);\n        ctx.fillRect((i + 1) * scale, (j + 1) * scale, scale, scale);\n      }\n    }\n  }\n  function cellPosToCanvasPos(positionArray) {\n    const x = Math.floor(positionArray[0] * scale + scale * 0.5);\n    const y = Math.floor(positionArray[1] * scale + scale * 0.5);\n    return [x, y];\n  }\n  function createSlug(\n    color = \"salmon\",\n    x = Math.floor(numOfCells / 2),\n    y = Math.floor(numOfCells / 2)\n  ) {\n    return {\n      color: color,\n      direction: \"north\",\n      bellyPositions: [],\n      isDigesting: false,\n      segmentPositions: [\n        [x, y],\n        [x, y + 1],\n        [x, y + 2]\n      ],\n      update: function () {\n        this.checkCollision();\n        this.moveSlug();\n        this.handleDigestion();\n        this.drawSlug();\n        this.drawBelly();\n        this.drawHead();\n      },\n      drawSlug: function () {\n        ctx.strokeStyle = this.color;\n        ctx.lineWidth = scale * 0.8;\n        ctx.lineCap = \"round\";\n        ctx.lineJoin = \"round\";\n        ctx.beginPath();\n\n        this.segmentPositions.forEach((segmentPosition, index) => {\n          const position = cellPosToCanvasPos(segmentPosition);\n          if (index === 0) {\n            ctx.moveTo(position[0], position[1]);\n          } else {\n            ctx.lineTo(position[0], position[1]);\n          }\n        });\n        ctx.stroke();\n      },\n      drawHead: function () {\n        const position = cellPosToCanvasPos(this.segmentPositions[0]);\n        const x = position[0];\n        const y = position[1];\n        const antennaLen = scale;\n\n        const angle = this.direction === \"south\" ? -2 : 2;\n\n        ctx.beginPath();\n        ctx.lineWidth = scale * 0.1;\n\n        let xTip = antennaLen * Math.cos(angle);\n        let yTip = antennaLen * Math.sin(angle);\n\n        ctx.moveTo(x + xTip, y - yTip);\n        ctx.lineTo(x, y);\n        ctx.lineTo(x - xTip, y - yTip);\n        ctx.stroke();\n      },\n      drawBelly: function () {\n        if (this.isDigesting) {\n          ctx.fillStyle = this.color;\n          this.bellyPositions.forEach(position => {\n            position = cellPosToCanvasPos(position);\n            ctx.beginPath();\n            ctx.arc(position[0], position[1], scale * 0.5, 0, 2 * Math.PI);\n            ctx.fill();\n          });\n        }\n      },\n      moveSlug: function () {\n        this.segmentPositions.pop();\n        this.segmentPositions.unshift(this.findNextPosition());\n      },\n      findNextPosition: function (direction = this.direction) {\n        const firstSegment = this.segmentPositions[0];\n        let newSegment = [];\n        switch (direction) {\n          case \"north\":\n            newSegment[0] = firstSegment[0];\n            newSegment[1] = firstSegment[1] - 1;\n            break;\n          case \"west\":\n            newSegment[0] = firstSegment[0] - 1;\n            newSegment[1] = firstSegment[1];\n            break;\n          case \"south\":\n            newSegment[0] = firstSegment[0];\n            newSegment[1] = firstSegment[1] + 1;\n            break;\n          case \"east\":\n            newSegment[0] = firstSegment[0] + 1;\n            newSegment[1] = firstSegment[1];\n            break;\n          default:\n            console.error(\n              \"ERROR: expected 'north' 'south' 'east' or 'west' but got \" +\n                direction\n            );\n        }\n        return newSegment;\n      },\n      checkCollision: function () {\n        const nextPosition = this.findNextPosition();\n        const nextSegmentPositions = [...this.segmentPositions];\n        nextSegmentPositions.pop();\n        const collideWithSelf = nextSegmentPositions.some(\n          position =>\n            position[0] === nextPosition[0] && position[1] === nextPosition[1]\n        );\n        const collideWithEdge =\n          nextPosition[0] < 0 ||\n          nextPosition[0] > numOfCells - 1 ||\n          nextPosition[1] < 0 ||\n          nextPosition[1] > numOfCells - 1;\n        const collideWithSnack =\n          nextPosition[0] === snack.position[0] &&\n          nextPosition[1] === snack.position[1];\n\n        if (collideWithSelf || collideWithEdge) {\n          isPaused = true;\n          gameOver();\n        } else if (collideWithSnack) {\n          this.handleEatSnack();\n        }\n      },\n      handleEatSnack: function () {\n        this.bellyPositions.push(snack.position);\n        this.isDigesting = true;\n        snack.handleEaten();\n      },\n      handleMovementInput: function (direction) {\n        const nextPosition = this.findNextPosition(direction);\n        const canMoveThere = !this.segmentPositions.some(\n          position =>\n            position[0] === nextPosition[0] && position[1] === nextPosition[1]\n        );\n        if (canMoveThere) {\n          this.direction = direction;\n        }\n      },\n      handleDigestion: function () {\n        if (this.isDigesting) {\n          const tempPositions = [...this.bellyPositions];\n          tempPositions.forEach(position => {\n            const finalSegment =\n              this.segmentPositions[this.segmentPositions.length - 1];\n            if (\n              position[0] === finalSegment[0] &&\n              position[1] === finalSegment[1]\n            ) {\n              this.segmentPositions.push(position);\n              this.bellyPositions.shift();\n              if (this.bellyPositions.length === 0) {\n                this.isDigesting = false;\n              }\n            }\n          });\n        }\n      }\n    };\n  }\n  function createSnack(color = \"#66b8ff\") {\n    const newSnack = {\n      color: color,\n      position: [0, 0],\n      randomizePosition: function () {\n        const slugPositions = [slug.findNextPosition()].concat(\n          slug.segmentPositions\n        );\n        const randomX = Math.floor(Math.random() * numOfCells);\n        const randomY = Math.floor(Math.random() * numOfCells);\n        if (slugPositions.length - 2 === numOfCells ** 2) {\n          gameOver(\"You WIN!\");\n        } else if (\n          slugPositions.some(\n            position => position[0] === randomX && position[1] === randomY\n          )\n        ) {\n          this.randomizePosition();\n        } else {\n          this.position = [randomX, randomY];\n        }\n      },\n      drawSnack: function () {\n        const position = cellPosToCanvasPos(this.position);\n\n        ctx.fillStyle = this.color;\n        ctx.beginPath();\n        ctx.arc(position[0], position[1], scale * 0.3, 0, 2 * Math.PI);\n        ctx.fill();\n      },\n      handleEaten: function () {\n        snack = createSnack();\n      }\n    };\n    newSnack.randomizePosition();\n    return newSnack;\n  }\n  function gameOver(message = \"Game Over\") {\n    isPaused = true;\n    slug = createSlug();\n    snack = createSnack();\n    drawBackground();\n    alert(message);\n  }\n\n  let isPaused = true;\n  const fps = config.fps;\n  const fpsInterval = 1000 / fps;\n  let now, then, delta;\n\n  function startGame(fps) {\n    then = window.performance.now();\n    requestAnimationFrame(update);\n  }\n\n  function update() {\n    now = window.performance.now();\n    delta = now - then;\n\n    if (delta > fpsInterval) {\n      then = now - (delta % fpsInterval);\n      drawBackground();\n      slug.update();\n      snack.drawSnack();\n    }\n    !isPaused && requestAnimationFrame(update);\n  }\n\n  function init() {\n    resizeCanvas();\n    drawBackground();\n    startGame();\n  }\n\n  let slug = createSlug();\n  let snack = createSnack();\n\n  window.addEventListener(\"load\", init);\n\n  document.addEventListener(\"keydown\", event => {\n    const key = event.key.toLocaleLowerCase();\n    switch (key) {\n      case \" \":\n        isPaused && update();\n        break;\n      case \"p\":\n        isPaused = !isPaused;\n        !isPaused && requestAnimationFrame(update);\n        break;\n      case \"w\":\n      case \"arrowup\":\n        slug.handleMovementInput(\"north\");\n        break;\n      case \"s\":\n      case \"arrowdown\":\n        slug.handleMovementInput(\"south\");\n        break;\n      case \"a\":\n      case \"arrowleft\":\n        slug.handleMovementInput(\"west\");\n        break;\n      case \"d\":\n      case \"arrowright\":\n        slug.handleMovementInput(\"east\");\n        break;\n      default:\n        break;\n    }\n  });\n\n  if (upBtn && downBtn && leftBtn && rightBtn) {\n    upBtn.addEventListener(\"click\", () => {\n      slug.handleMovementInput(\"north\");\n    });\n\n    downBtn.addEventListener(\"click\", () => {\n      slug.handleMovementInput(\"south\");\n    });\n\n    leftBtn.addEventListener(\"click\", () => {\n      slug.handleMovementInput(\"west\");\n    });\n\n    rightBtn.addEventListener(\"click\", () => {\n      slug.handleMovementInput(\"east\");\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module"}